Explain why doubling the size of the underlying array of your HashClass may be a poor idea:

Because doubling is an exponential operation, it doesn't take too many resizing
before available memory is exhausted.  After the first few resizing operations,
doubling (before memory is exhausted) will be relatively enormous sizes resulting
in poor performance from large memory allocations.  Further, after the first few
resizing operations, the large number of elements added to the storage array relative
to the single item to be resolved in a collision will result in a sparse array, wasting
much of the allocated memory.

Also, since doubling isn't based on a prime number, the mod operation for hash code
generation will not be as affected (because of a common denominator).  This will
create a bias in the key generation that makes it less effective to resolve and avoid
collisions.  
